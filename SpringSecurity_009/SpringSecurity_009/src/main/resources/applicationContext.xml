<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:component-scan base-package="com.security.dao"/>
	<context:component-scan base-package="com.security.service"/>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--引入属性文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:dbconfig.properties" />
	</bean>

	<!-- 配置数据源 -->
	<!-- <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"><value>${driverClassName}</value></property>
		<property name="url"><value>${url}</value></property>
		<property name="username"><value>${username}</value></property>
		<property name="password"><value>${password}</value></property>
	</bean> -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/testuser"></property>
		<property name="username" value="root"></property>
		<property name="password" value="7233792"></property>
	</bean>

	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> <!-- 设置数据库方言 -->
				<prop key="hibernate.hbm2ddl.auto">none</prop> <!-- 设置自动创建create|更新update|验证数据库表结构validate| create-drop sessionFactory创建的时候建表, 
					关闭时删除表 -->
				<prop key="hibernate.show_sql">true</prop>       <!-- 是否在控制台显示sql -->
				<prop key="hibernate.format_sql">true</prop>     <!-- 是否格式化sql，优化显示 -->
				<prop key="hibernate.cache.use_second_level_cache">false</prop> <!-- 是否开启二级缓存 -->
				<prop key="hibernate.cache.use_query_cache">false</prop>		<!-- 是否开启查询缓存 -->
				<prop key="hibernate.jdbc.fetch_size">100</prop> 				<!-- 数据库批量查询最大数 -->
				<prop key="hibernate.jdbc.batch_size">100</prop>				<!-- 数据库批量更新、添加、删除操作最大数 -->
				<prop key="hibernate.connection.autocommit">true</prop>			<!-- 是否自动提交事务 -->
				<prop key="hibernate.connection.release_mode">auto</prop>		<!-- 指定hibernate在何时释放JDBC连接 -->
				<!-- <prop key="jdbc.use_scrollable_resultset">false</prop> -->
				<!-- 创建session方式 hibernate4.x 的方式 -->
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
				<!-- javax.persistence.validation.mode默认情况下是auto的， 就是说如果不设置的话它是会自动去你的classpath下面找一个bean-validation**包 
					所以把它设置为none即可 -->
				<prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
		<!--注解扫描的包 可以使用下面代替 -->
		<property name="packagesToScan" value="com.security.model" />
	</bean>

	<!-- 配置一个事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
 	<!--配置"jdbcTemplate" 适用于不同情况 -->
     <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
     	<property name="dataSource" ref="dataSource"/>
     </bean>
	<!--配置template -->
    <!-- <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
    	<property name="sessionFactory" ref="sessionFactory" />		
    </bean> -->
	<!-- 配置事务事务属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置事务切点，并把切点和事务属性关联起来 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.security.dao.impl.*.*(..))"
			id="txPointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>

	<!-- 配置事务异常封装 --><!-- <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" 
		/> -->


	<import resource="spring-security.xml" />
</beans>